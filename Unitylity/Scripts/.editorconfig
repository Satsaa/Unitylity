root = false

# Rules configuration
[*.cs]

csharp_new_line_before_open_brace = none
csharp_new_line_before_else = false
csharp_new_line_before_catch = false
csharp_new_line_before_finally = false

dotnet_diagnostic.IDE1006.severity = none
dotnet_diagnostic.IDE0044.severity = none
dotnet_diagnostic.IDE0051.severity = none
dotnet_diagnostic.IDE0048.severity = none
dotnet_diagnostic.IDE0008.severity = none
dotnet_diagnostic.IDE0005.severity = none
dotnet_diagnostic.IDE0055.severity = none
dotnet_diagnostic.IDE0011.severity = none
dotnet_diagnostic.IDE0040.severity = none
dotnet_diagnostic.IDE0059.severity = none
dotnet_diagnostic.IDE0052.severity = none
dotnet_diagnostic.IDE0060.severity = none
dotnet_diagnostic.IDE0062.severity = none
dotnet_diagnostic.IDE0063.severity = none
dotnet_diagnostic.IDE0065.severity = none
dotnet_diagnostic.IDE0022.severity = none  # Convert to block body
dotnet_diagnostic.IDE0058.severity = none  # Ret val not used
dotnet_diagnostic.RCS1124.severity = none  # Var can be inlined
dotnet_diagnostic.RCS1124FadeOut.severity = none  # Var can be inlined
dotnet_diagnostic.RCS1090.severity = none  # Add call to 'ConfigureAwait'
dotnet_diagnostic.RCS1036.severity = none  # Remove redundant empty line
dotnet_diagnostic.RCS1163.severity = silent  # Unused parameter
dotnet_diagnostic.RCS1169.severity = none  # Make field read-onlyonly
dotnet_diagnostic.RCS1037.severity = none  # Remove trailing white-space
dotnet_diagnostic.RCS1071.severity = none  # Remove redundant base constructor call
dotnet_diagnostic.RCS1213.severity = silent  # Remove unused field declaration
dotnet_diagnostic.RCS1170.severity = none  # Use read-only auto-implemented property
dotnet_diagnostic.RCS1110.severity = none  # Declare inside namespace // !! Disabled for now
dotnet_diagnostic.RCS1018.severity = none  # Add accessibility modifiers
dotnet_diagnostic.RCS1192.severity = silent  # Unnecessary verbatim literal
dotnet_diagnostic.RCS1123.severity = none  # Add parenthesis when necessary (Complains about 1 + 1 / 1 vs 1 + (1 / 1))
dotnet_diagnostic.IDE0046.severity = none  # 'if' statement can be simplified (Duplicate)
dotnet_diagnostic.RCS1158.severity = none  # Static member in generic type should use a type parameter
dotnet_diagnostic.IDE0036.severity = none  # Modifier order (new after access modifiers)
dotnet_diagnostic.RCS1019.severity = suggestion  # Modifier order (new before access modifiers)
dotnet_diagnostic.RCS1225.severity = none  # Make class sealed
dotnet_diagnostic.RCS1096.severity = none  # Convert 'HasFlag' call to bitwise operation
dotnet_diagnostic.UNT0008.severity = warning  # Unity objects should not use null propagation
dotnet_diagnostic.UNT0007.severity = warning  # Unity objects should not use null coalescing
dotnet_diagnostic.RCS1146.severity = silent  # Use conditional access (conflicts with unity null comparison)
dotnet_diagnostic.RCS1171.severity = silent  # Simplify lazy initialization (conflicts with unity null comparison)
dotnet_diagnostic.RCS1084.severity = silent  # Use coalesce expression instead of conditional expression (conflicts with unity null comparison)
dotnet_diagnostic.RCS1221.severity = silent  # Use pattern matching instead of combination of 'as' operator and null check (conflicts with unity null comparison)
dotnet_diagnostic.RCS1213.severity = none  # Remove unused method declaration (unity messages...)
dotnet_diagnostic.RCS1161.severity = none  # Enum should declare explicit values
dotnet_diagnostic.IDE0023.severity = none  # Use block body for operators
dotnet_diagnostic.RCS1135.severity = none  # Declare enum member with zero value (when enum has FlagsAttribute)
dotnet_diagnostic.RCS1006.severity = none  # Merge 'if' with nested 'if'.
dotnet_diagnostic.RCS1093.severity = none  # Remove file with no code.

dotnet_diagnostic.CS8019.severity = none # Remove unnecessary usings
dotnet_diagnostic.IDE0042.severity = none # Variable declaration can be deconstructed
dotnet_diagnostic.IDE0029.severity = none # Null check can be simplified (Unity compatibility)


#dotnet_diagnostic.RCS1049.severity = silent  # Simplify boolean comparison
#dotnet_diagnostic.IDE0100.severity = silent  # Remove redundant equality
#dotnet_diagnostic.RCS1132.severity = silent  # Remove redundant overriding method
#dotnet_diagnostic.RCS1058.severity = silent  # Use compound assignment
#dotnet_diagnostic.RCS1021.severity = silent  # Use expression-bodied lambda

[Assets/Packages/Unitylity/**.cs]
generated_code = false

# Prevent analyzers from running in these directories
[Assets/Packages/**.cs]
generated_code = true
